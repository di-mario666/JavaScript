'use strict';

//ЗАДАНИЕ №1
let a = 1, b = 1, c, d; 

//ответ: 2, так как ++ перед переменной обозначетб что переменная увеличтся на единицуа а потом выполнится операция сложения, a= a+1, где а=1
c = ++a; 
alert(c); 

//ответ: 1,так как постфиксная форма возвращает старое значение, мы прибавляем единицуб но возвращаем старое значение
d = b++;
alert(d);

/*ответ: 5, т.к. в первом примере мы прибавили единицу в переменную а ее значение стало равно 2.В данном примере прибавляем еще единицу и а становится равно 3*/
c = 2 + ++a; 
alert(c); 

/*ответ: 4, т.к. во втором примере мы прибавили единицу в переменную b ее значение стало равно 2.В данном примере прибавляем еще единицу и а становится равно 3, но выводим предыдущее значение т.е. 2 */
d = 2 + b++; 
alert(d); 

//ЗАДАНИЕ №2
let a = 2; 
let x = 1 + (a *= 2);/* X будет равен 5 т.к. оператор *= это сокращенный оператор, полностью он будет выглядеть x= 1 + (a = a * 2 ) */

//ЗАДАНИЕ №3
let a = 7;
let b = 12;
if (a > 0 && b > 0){
x = a - b;
alert(x);
    } else if (a < 0 && b < 0){
        x = a * b;
        alert (x);
        }
//ЗАДАНИЕ №4 Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return. 
let a = 555;
let b = 275;

function plus(a, b) {
    return a + b;
}

function minus(a, b) {
    return a - b;
}

function div (a, b) {
    return a / b;
}

function mult (a, b) {
    return a * b;
}

//ЗАДАНИЕ №5.
function mathOperation(arg1, arg2, operation){
    switch(operation){
       	case 'сложение':
           	return arg1 + arg2;
           	break;
       	case 'вычитание':
           	return arg1 - arg2;
            break;
         case 'деление':
            return arg1 / arg2;
            break;
       	case 'умножение':
           	return arg1 * arg2;
             break;
   	}